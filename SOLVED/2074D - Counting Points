#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define flp(k,n)                            for(ll i=(ll)k;i<(ll)n;i++)
#define flm(k,n)                            for(ll j=(ll)n-1;j>=(ll)k;j--)
#define YES                                 cout<<"YES\n"
#define NO                                  cout<<"NO\n"
#define endl                                "\n"
#define pb                                  push_back
#define ppb                                 pop_back
#define NL                                  cout<<"\n"
#define SPACE                               << " " << 

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds; 
  
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;



void solve()
{
    ll n, m, ans = 0;
    cin >> n >> m;
    vector<pair<ll, ll>> a(n);
    flp(0, n)
        cin >> a[i].first;
    flp(0, n)
        cin >> a[i].second;
    map<ll, ll> ma;
    flp(0, n)
    {
        flm(a[i].first - a[i].second, a[i].first + a[i].second + 1)
        {
            ma[j] = max(ma[j], (ll)sqrt(a[i].second * a[i].second - (a[i].first - j) * (a[i].first - j)));
        }
    }
    for(auto [x, y] : ma)
        ans += (2 * y  + 1);
    cout << ans << endl;
}


signed main() 
{
    ios_base::sync_with_stdio(false) ; 
    cin.tie(0) ;
    int TC = 1 ;
    cin >> TC ;
    while(TC--)
        solve() ;
}
